<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
  http://www.springframework.org/schema/aop 
  http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.mysql.driverClassName}" />
		<property name="url" value="${jdbc.mysql.url}" />
		<property name="username" value="${jdbc.mysql.username}" />
		<property name="password" value="${jdbc.mysql.password}" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mapper/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- redis -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxWaitMillis" value="${spring.redis.pool.max-wait}" />
		<property name="maxIdle" value="${spring.redis.pool.max-idle}" />
		<property name="minIdle" value="${spring.redis.pool.min-idle}" />
	</bean>
	
	<!-- 单机部署redis使用JedisPool，集群部署建议使用ShardedJedisPool -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg name="poolConfig" ref="poolConfig" />
		<constructor-arg name="host" value="${spring.redis.host}" />
		<constructor-arg name="port" value="${spring.redis.port}" />
		<constructor-arg name="password" value="${spring.redis.password}" />
		<constructor-arg name="timeout" value="${spring.redis.timeout}" />
		<constructor-arg name="database" value="${spring.redis.database}" />
	</bean>

</beans>